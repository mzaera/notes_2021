
<launch>
  
    <!-- 
    Hand-held 3D lidar mapping example using only a Velodyne PUCK (no camera).
    Prerequisities: rtabmap should be built with libpointmatcher
    Example:
     $ roslaunch rtabmap_ros test_velodyne.launch
     $ rosrun rviz rviz -f map
     $ Show TF and /rtabmap/cloud_map topics
    -->

    <arg name="rtabmapviz"             default="false"/>
    <arg name="use_imu"                default="true"/> <!-- Assuming IMU fixed to lidar with /velodyne -> /imu_link TF -->
    <arg name="scan_20_hz"             default="false"/> <!-- If we launch the velodyne with "rpm:=1200" argument -->
    <arg name="use_sim_time"           default="false"/>
    <param if="$(arg use_sim_time)"    name="use_sim_time" value="false"/>
    
     <!--<arg name="frame_id"               default="base_link"/>-->
    <arg name="odom_frame_id"         default="odom"/>
    
    <arg name="frame_id"               default="base_link"/>

  <!-- Corresponding config files -->
  <arg name="cfg"                     default="" /> <!-- To change RTAB-Map's parameters, set the path of config file (*.ini) generated by the standalone app -->
  <arg name="gui_cfg"                 default="~/.ros/rtabmap_gui.ini" />
  <arg name="rviz_cfg"                default="$(find rtabmap_ros)/launch/config/rgbd.rviz" />

  <arg name="map_frame_id"            default="map"/>
  <arg name="ground_truth_frame_id"   default=""/>     <!-- e.g., "world" -->
  <arg name="ground_truth_base_frame_id" default=""/>  <!-- e.g., "tracker", a fake frame matching the frame "frame_id" (but on different TF tree) -->
  <arg name="namespace"               default="rtabmap"/>
  <arg name="database_path"           default="~/.ros/rtabmap.db"/>
  <arg name="queue_size"              default="10"/>
  <arg name="wait_for_transform"      default="0.2"/>
  <arg name="args"                    default="-- delete_db_on_start"/>              <!-- delete_db_on_start, udebug -->
  <arg name="rtabmap_args"            default="$(arg args)"/>   <!-- deprecated, use "args" argument -->
  <arg name="launch_prefix"           default=""/>              <!-- for debugging purpose, it fills launch-prefix tag of the nodes -->
  <arg name="output"                  default="log"/>        <!-- Control node output (screen or log) -->
  <arg name="publish_tf_map"          default="false"/>

  <!-- Already synchronized RGB-D related topic, with rtabmap_ros/rgbd_sync nodelet -->
  <arg name="rgbd_sync"               default="false"/>         <!-- pre-sync rgb_topic, depth_topic, camera_info_topic -->

  <arg name="approx_sync"             default="false"/>         
  <arg name="approx_rgbd_sync"        default="true"/>          <!-- false=exact synchronization -->
  <arg name="subscribe_rgbd"          default="$(arg rgbd_sync)"/>
  <arg name="rgbd_topic"              default="rgbd_image" />
  <arg name="depth_scale"             default="1.0" />

  <arg name="compressed"              default="true"/>         <!-- If you want to subscribe to compressed image topics -->
  <arg name="rgb_image_transport"     default="compressed"/>    <!-- Common types: compressed, theora (see "rosrun image_transport list_transports") -->
  <arg name="depth_image_transport"   default="compressedDepth"/>  <!-- Depth compatible types: compressedDepth (see "rosrun image_transport list_transports") -->

  <arg name="subscribe_scan"          default="false"/>
  <arg name="scan_topic"              default="/scan"/>
  <arg name="subscribe_scan_cloud"    default="false"/>
  <arg name="scan_cloud_topic"        default="/scan_cloud"/>
  <arg name="scan_normal_k"           default="0"/>

  <arg name="odom_topic"               default="rgbd_odom"/>          <!-- Odometry topic name -->
  <arg name="vo_frame_id"              default="$(arg frame_id)"/> <!-- Visual/Icp odometry frame ID for TF -->
  <arg name="publish_tf"               default="false"/>
  <arg name="publish_tf_odom"          default="false"/>
  <arg name="odom_tf_angular_variance" default="1"/>             <!-- If TF is used to get odometry,nwu this is the default angular variance -->
  <arg name="odom_tf_linear_variance"  default="1"/>             <!-- If TF is used to get odometry, this is the default linear variance -->
  <arg name="odom_args"                default=""/>              <!-- More arguments for odometry (overwrite same parameters in rtabmap_args) -->
  <arg name="odom_sensor_sync"         default="false"/>
  <arg name="odom_guess_frame_id"        default=""/>
  <arg name="odom_guess_min_translation" default="0"/>
  <arg name="odom_guess_min_rotation"    default="0"/>
  <arg name="odom_max_rate"            default="0"/>
  <arg name="odom_expected_rate"       default="0"/>
  <arg name="wait_imu_to_init"         default="true"/>
  <arg name="use_odom_features"        default="false"/>
  <arg name="subscribe_user_data"      default="false"/>             <!-- user data synchronized subscription -->
  <arg name="user_data_topic"          default="/user_data"/>
  <arg name="user_data_async_topic"    default="/user_data_async" /> <!-- user data async subscription (rate should be lower than map update rate) -->

  <arg name="gps_topic"                default="gps/fix" />         <!-- gps async subscription -->

  <arg name="tag_topic"                default="/tag_detections" />  <!-- apriltags async subscription -->
  <arg name="tag_linear_variance"      default="0.0001" />
  <arg name="tag_angular_variance"     default="9999" />             <!-- >=9999 means ignore rotation in optimization, when rotation estimation of the tag is not reliable -->

  <arg name="imu_topic"                default="camera/imu"/>
  <arg name="rtabmap_imu_topic"        default="rtabmap/imu" />   
  <arg name="depth_topic"              default="camera/aligned_depth_to_color/image_raw" />   
  <arg name="camera_info_topic"        default="camera/color/camera_info" />   
  <arg name="rgb_topic"                default="camera/color/image_raw" />   
  <arg name="point_cloud_topic"        default="fused_point_cloud" />   


  <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_node">
    <param name="use_mag"         type="bool"  value="false"/>
    <param name="publish_tf"      type="bool"  value="false"/>
    <param name="world_frame"     value="nwu"/>
    <remap from="imu/data_raw"    to="$(arg imu_topic)" />
    <remap from="imu/data"        to="$(arg rtabmap_imu_topic)" />
  </node>

    <!-- IMU orientation estimation and publish tf accordingly to imu frame 
    <node if="$(arg use_imu)" pkg="rtabmap_ros" type="transform_to_tf.py" name="transform_to_tf">
      <remap from="imu/data" to="$(arg rtabmap_imu_topic)"/>
      <param name="base_frame_id" value="camera_link"/>
      <param name="child_frame_id" value="imu_link"/>
    </node> -->

    
      <node pkg="rtabmap_ros" type="rgbdicp_odometry" name="rgbdicp_odometry" output="log">
        <param name="subscribe_depth"      type="bool" value="true"/>
        <param name="subscribe_rgb"        type="bool" value="true"/>
        <param name="subscribe_scan_cloud" type="bool" value="true"/>
        <param name="approx_sync"          type="bool" value="true"/>
        <param name="visual_odometry"      type="bool" value="false"/>
        
        <remap from="depth/image"          to="$(arg depth_topic)" />
        <remap from="rgb/camera_info"      to="$(arg camera_info_topic)" />
        <remap from="rgb/image"            to="$(arg rgb_topic)" />
        <remap from="scan_cloud"           to="$(arg point_cloud_topic)" />
            
        <param name="frame_id"             type="string" value="$(arg frame_id)"/>  
        <param name="odom_frame_id"        type="string" value="$(arg odom_frame_id)"/>  
        
        <param     if="$(arg scan_20_hz)" name="expected_update_rate" type="double" value="25"/>
        <param unless="$(arg scan_20_hz)" name="expected_update_rate" type="double" value="15"/>

        <remap if="$(arg use_imu)" from="imu" to="$(arg rtabmap_imu_topic)"/>
        <param if="$(arg use_imu)" name="guess_frame_id"   type="string" value="$(arg odom_guess_frame_id)"/>
        <param if="$(arg use_imu)" name="wait_imu_to_init" type="bool" value="true"/>
      
        <!-- <param name="scan_normal_k"   type="int" value="10"/>    -->
     
        <!-- <param name="Icp/PointToPlane"  type="string" value="true"/>
        <param name="Icp/VoxelSize"     type="string" value="0"/>
        <param name="Icp/PM"            type="string" value="false"/>
        <param name="Icp/PMOutlierRatio" type="string" value="0.65"/>
        <param name="Odom/GuessMotion"  type="string" value="true"/>
        <param name="Odom/ResetCountdown"  type="string" value="1"/> -->

        <!-- ICP parameters -->
        <param name="Odom/GuessMotion"  type="string" value="true"/>
        <param name="Icp/PointToPlane"        type="string" value="true"/>
        <param name="Icp/Iterations"          type="string" value="10"/>
        <param name="Icp/VoxelSize"           type="string" value="0.2"/>
        <param name="Icp/DownsamplingStep"    type="string" value="1"/>
        <param name="Icp/Epsilon"             type="string" value="0.001"/>
        <param name="Icp/PointToPlaneK"       type="string" value="10"/>
        <param name="Icp/PointToPlaneRadius"  type="string" value="0"/>
        <param name="Icp/MaxTranslation"      type="string" value="3"/>
        <param name="Icp/MaxCorrespondenceDistance" type="string" value="0.5"/>
        <param name="Icp/PM"                  type="string" value="true"/> 
        <param name="Icp/PMOutlierRatio"      type="string" value="0.65"/>
        <param name="Icp/CorrespondenceRatio" type="string" value="0.001"/>  
	      <!--<param name="RGBD/OptimizeIterations" type="string" value="0"/>-->

        <!-- Odom parameters -->       
        <param name="Odom/ScanKeyFrameThr"       type="string" value="0.9"/>
        <!-- <param name="Odom/Strategy"              type="string" value="0"/> -->
        <param name="OdomF2M/ScanSubtractRadius" type="string" value="0.2"/>
        <param name="OdomF2M/ScanMaxSize"        type="string" value="15000"/>   
        <param name="Odom/ResetCountdown"        type="string" value="1"/>

        <param name="publish_tf"                  type="bool"   value="$(arg publish_tf)"/>
        <param name="publish_tf_map"              type="bool"  value="$(arg publish_tf_map)"/>
        <param name="publish_tf_odom"             type="bool"  value="$(arg publish_tf_odom)"/>

        <param name="ground_truth_frame_id"       type="string" value="$(arg ground_truth_frame_id)"/>
        <param name="ground_truth_base_frame_id"  type="string" value="$(arg ground_truth_base_frame_id)"/>
        <param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>
        <param name="wait_imu_to_init"            type="bool"   value="$(arg use_imu)"/>
        <param name="approx_sync"                 type="bool"   value="$(arg approx_sync)"/>
        <param name="config_path"                 type="string" value="$(arg cfg)"/>
        <param name="queue_size"                  type="int"    value="$(arg queue_size)"/>
        <param name="subscribe_rgbd"              type="bool"   value="$(arg subscribe_rgbd)"/>
        <param name="guess_frame_id"              type="string" value="$(arg odom_guess_frame_id)"/> 
        <param name="guess_min_translation"       type="double" value="$(arg odom_guess_min_translation)"/>
        <param name="guess_min_rotation"          type="double" value="$(arg odom_guess_min_rotation)"/>
        <param name="expected_update_rate"        type="double" value="$(arg odom_expected_rate)"/>
        <param name="max_update_rate"             type="double" value="$(arg odom_max_rate)"/>
        <param name="keep_color"                  type="bool"   value="$(arg use_odom_features)"/> -->

        <remap from="odom"                       to="rgbd_odom"/>
        <remap from="odom_info"                  to="rgbd_odom_info"/>
        <remap from="odom_last_frame"            to="rgbd_odom_last_frame"/>
        <remap from="odom_local_map"             to="rgbd_odom_local_map"/>
        <remap from="odom_local_scan_map"        to="rgbd_odom_local_scan_map"/>  
        
        <param name="publish_tf_odom"             type="bool"  value="false"/>

      </node>


</launch>

