<launch>                          
    <!--RTABMAP NODE-->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start -d" launch-prefix="bash -c 'sleep 10.0; $0 $@'" >

      <!-- From where is generated the map? -->
      <param name="subscribe_depth"                 type="bool"   value="true"/>
      <param name="subscribe_scan"                  type="bool"   value="false"/>
      <param name="subscribe_scan_cloud"            type="bool"   value="true"/>
      <param name="subscribe_stereo"                type="bool"   value="false"/>
      <param name="subscribe_rgbd"                  type="bool"   value="false"/>

      <!-- TF config params -->
      <param name="frame_id"                        type="string" value="base_link"/>
      <param name="map_frame_id"                    type="string" value="map"/>
      <param name="odom_frame_id"                   type="string" value="map"/> 
      <param name="odom_tf_linear_variance"         type="double" value="0.000005"/> 
      <param name="odom_tf_angular_variance"        type="double" value="0.000005"/> 
      <param name="queue_size"                      type="int"    value="10"/>
      <param name="publish_tf"                      type="bool"   value="false"/>
      <param name="tf_delay"                        type="double" value="0.05"/>
      <param name="wait_for_transform"              type="bool"   value="true"/>
      <param name="wait_for_transform_duration"     type="double" value="0.5"/>
      <param name="publish_tf_map"                      type="bool"   value="false"/>

      <!-- General config params -->
      <param name="config_path"                     type="string" value=""/>
      <param name="database_path"                   type="string" value="~/.ros/rtabmap.db"/>
      <param name="approx_sync"                     type="bool"   value="true"/>
      <param name="rgbd_cameras"                    type="int"    value="1"/>
      <param name="odom_sensor_sync"                type="bool"   value="false"/>
      <param name="use_action_for_goal"             type="bool"   value="false"/>

      <!-- Generate sacan from depth -->
      <param name="gen_scan"                        type="bool"   value="false"/>
      <param name="gen_scan_max_depth"              type="double" value="4.0"/>
      <param name="gen_depth"                       type="bool"   value="false"/> 
      <param name="gen_depth_decimation"            type="int"    value="1"/>
      <param name="gen_depth_fill_holes_size"       type="int"    value="0"/>
      <param name="gen_depth_fill_iterations"       type="double" value="0.1"/>      
      <param name="gen_depth_fill_holes_error"      type="int"    value="1"/>

      <!-- Map config -->
      <param name="grid_size"                       type="double" value="5"/> <!--  initialize the minimum size of the map -->
      <param name="map_filter_radius"               type="double" value="0.1"/>      
      <param name="map_filter_angle"                type="double" value="35.0"/>      
      <param name="map_cleanup"                     type="bool"   value="true"/> 
      <param name="latch"                           type="bool"   value="true"/>
      <param name="map_always_update"               type="bool"   value="false"/>
      <param name="map_empty_ray_tracing"           type="bool"   value="true"/>

      <!-- Out cloud config -->
      <param name="cloud_output_voxelized"                    type="bool"   value="false"/> 
      <param name="cloud_subtract_filtering"                  type="bool"   value="false"/> 
      <param name="cloud_noise_filtering_radius"              type="double" value="0.05"/>
      <param name="cloud_subtract_filtering_min_neighbors"    type="int"    value="5"/> 

      <!--Main advanced config -->
      <param name="RGBD/NeighborLinkRefining"       type="bool"   value="true"/>   <!-- (t) New node added to graph, th neighbor link to previous noded using approach selected (Reg/Strategy). -->
      <param name="RGBD/OptimizeMaxError"           type="string" value="0.05"/>   <!-- (3) Reject loop closures if optimization error ratio is greater than this value -->
      <param name="RGBD/OptimizeFromGraphEnd"       type="string" value="false"/>  <!-- (f) Optimize graph from the newest node. If false, the graph optimized from oldest node of current graph -->
      <param name="RGBD/AngularUpdate"              type="string" value="0.75"/>  
      <param name="RGBD/LinearUpdate"               type="string" value="0.1"/>
      <param name="RGBD/LoopClosureReextractFeatures" type="string" value="true"/> <!-- (t) Extract features even if there are some already in the nodes. -->

      <!--Grid (local?) config -->
      <param name="Grid/3D"                         type="bool"   value="true"/>      
      <param name="Grid/CellSize"                   type="double" value="0.075"/>

      <param name="Grid/FromDepth"                  type="bool"   value="false"/>
      <param name="Grid/DepthDecimation"            type="string" value="4"/>

      <param name="Grid/FootprintHeight"            type="string" value="0.0"/>
      <param name="Grid/FootprintLength"            type="string" value="0.0"/>
      <param name="Grid/FootprintWidth"             type="string" value="0.0"/>

      <param name="Grid/NormalsSegmentation"        type="bool"   value="true"/>  <!-- False: auto filter (dont know from where) True: param decide how clean the ground -->\
      <param name="Grid/GroundIsObstacle"           type="string" value="false"/>
      <param name="Grid/RangeMax"                   type="double" value="15.0"/> 
      <param name="Grid/RangeMin"                   type="double" value="0.0"/> 

      <param name="Grid/FlatObstacleDetected"       type="string" value="true"/>
      <param name="Grid/MaxObstacleHeight"          type="double" value="3.5"/>

      <param name="Grid/MaxGroundHeight"            type="double" value="0.01"/>  <!-- ground max height -->
      <param name="Grid/MinGroundHeight"            type="double" value="0.0"/> 
      <param name="Grid/MaxGroundAngle"             type="int"    value="35"/>    <!-- ground max angle -->

      <param name="Grid/MinClusterSize"             type="int"    value="20"/>
      <param name="Grid/ClusterRadius"              type="double" value="0.25"/>  <!--??? -->
      <param name="Grid/NoiseFilteringMinNeighbors" type="int"    value="100"/>
      <param name="Grid/NoiseFilteringRadius"       type="double" value="0.0"/>
      <param name="Grid/NormalK"                    type="string" value="20"/>

      <param name="Grid/RayTracing"                 type="bool"   value="true"/> 
      <param name="Grid/MapFrameProjection"         type="bool"   value="false"/>
      <param name="Grid/PreVoxelFiltering"          type="bool"   value="false"/>

      <param name="Grid/Scan2dUnknownSpaceFilled"   type="string" value="false"/>
      <param name="Grid/ScanDecimation"             type="string" value="1"/>      

      <!--Grid (global) config -->
      <param name="GridGlobal/AltitudeDelta"       type="string" value="0"/>
      <param name="GridGlobal/Eroded"       type="string" value="false"/>
      <param name="GridGlobal/FootprintRadius"       type="string" value="0.0"/>
      <param name="GridGlobal/FullUpdate"       type="string" value="true"/>
      <param name="GridGlobal/MaxNodes"       type="string" value="0"/>
      <param name="GridGlobal/MinSize"       type="string" value="0.0"/>
      <param name="GridGlobal/OccupancyThr"       type="string" value="0.5"/>
      <param name="GridGlobal/ProbClampingMax"       type="string" value="0.971"/>
      <param name="GridGlobal/ProbClampingMin"       type="string" value="0.1192"/>
      <param name="GridGlobal/ProbHit"       type="string" value="0.7"/>
      <param name="GridGlobal/ProbMiss"       type="string" value="0.4"/>
      <param name="GridGlobal/UpdateError"       type="string" value="0.01"/>
    

      <!--Optimizer config -->
      <param name="Optimizer/Iterations"            type="int"    value="50"/> 
      <param name="Optimizer/Slam2D"                type="bool"   value="true" />

      <!--Registration config (as we use lidar icp best way of regist )-->
      <param name="Reg/Force3DoF"                   type="string" value="true"/>   <!--(t) Force 3 degrees-of-freedom (x,y,theta) -->
      <param name="Reg/RepeatOnce"                  type="string" value="true"/>   <!--(t) Second regist with output of first one. Only if no guess was provided for first regist (loop closure).-->
      <param name="Reg/Strategy"                    type="string" value="1"/>      <!--(1) 0=Vis, 1=Icp, 2=VisIcp-->

      <!--Icp registartion config -->
      <param name="Icp/PointToPlane"                 type="string" value="true"/> 
      <param name="Icp/PointToPlaneK"                type="string" value="100"/>   
      <param name="Icp/CCFilterOutFarthestPoints"    type="string" value="true"/> 


      <!--Remaps-->
      <remap from="rgb/image"              to="camera/color/image_raw"/>
      <remap from="depth/image"            to="camera/aligned_depth_to_color/image_raw"/>
      <remap from="rgb/camera_info"        to="camera/color/camera_info"/>
      <remap from="scan_cloud"             to="fused_point_cloud_camera"/>

  -   <remap from="scan_descriptor"        to="/scan_descriptor"/>
      <remap from="user_data"              to="/user_data"/>
      <remap from="user_data_async"        to="/user_data_async"/>
      <remap from="tag_detections"         to="/tag_detections"/>

      <remap from="odom"                   to="rgbd_odom"/>
      <remap from="imu"                    to="imu/data"/>
    </node>
  
  <!-- </group> -->

</launch>